!! Building automatically your document with Travis

Travis is a service similar to Jenkins that is useful to automate your processes.
Once configured, a travis job will run each time you commit to your book github repository. 
We will show now how we can use Travis to automatically build the pdf. 
In addition we will show how we can automatically publish the pdf on the github repository itself.

!!! Configuring your github account
The first to start with is to enable the travis integration from your github repository. You will find the integration in Settings and the menu integration services. You should look for Travis CI and enable it as shown in Figure *@github*.

+Enabling the travis service in your github account.>file://figures/configuringServices.png|label=github|width=80+


Once this is done, you should go to your travis account *http://travis-ci.com* and enable your project as shown in Figure *@traviside*.

+Enabling your github project on travis.>file://figures/travis.png|label=traviside|width=80+

Note that this setup may take a while to sync. So do not worry if these systems start to off right in the minute. It may take a while, so let us pass to the next item. 

!!! Add and edit the .travis.yml file

Here is the ==.travis.yml== of this booklet. You can find it online at *https://github.com/SquareBracketAssociates/Booklet-PublishingAPillarBooklet*:

[[[
language: smalltalk
sudo: false

os:
  - linux

smalltalk:
  - Pharo-7.0

install:
  - git clone https://github.com/pillar-markup/pillar.git -b v7.4.1 
# Run pillar build script. Pillar will be built in `pwd`/build!
  - cd pillar && ./scripts/build.sh && cd ..                              
# Install latex
  - . pillar/scripts/ci/ensure_latex.sh                                  
  # Install latex dependencies required by pillar
  - ./pillar/scripts/ci/ensure_book_dependencies.sh                       

script:
  - ./pillar/build/pillar build pdf

after_success:
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - mv _result/pdf/book.pdf pillarBooklet-wip.pdf
  - bash upload.sh pillarBooklet-wip.pdf

branches:
  except:
    - /^(?i:continuous)$/
]]]

Add a similar configuration file to your repository. Once the travis github get synchronised and travis is kicked in, you will be able to check on the travis log that your project has been successfully built. 


!!! Some explanations
Let us explain some parts: the ==after_success== section of the configuration is using a script to release continuously on each green commit. The documentation is available at *https://github.com/probonopd/uploadtool/*.

[[[
after_success:
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - mv _result/pdf/book.pdf pillarBooklet-wip.pdf
  - bash upload.sh pillarBooklet-wip.pdf

branches:
  except:
    - /^(?i:continuous)$/
]]]

!!! Using badges to indicate build status

You can now use the status of a travis build right in the github repository using markdown badges in the project ==README.md== file.


[[[
# A booklet explaining how to build a booklet 

[![Build status][badge]][travis]

[travis]: https://travis-ci.org/SquareBracketAssociates/Booklet-PublishingAPillarBooklet
[badge]: https://travis-ci.org/SquareBracketAssociates/
Booklet-PublishingAPillarBooklet.svg?branch=master

## To contribute
- Fork
- Do pull Request 

## To latex it locally

```
pillar build pdf 
```
]]]

At the stage you should get already important feedback since you will know if your project fully builds or not. 

!!!! How to add a new released file in your git hub account 

To release a pdf that will be stored on github in the booklet repository, we should issue an annotated tag as follow:

[[[
git tag -a v1.0-Pharo50
git push --tags
]]]

!!! Conclusion

Now you are ready to manage and automatically build documents in various formats.





















