!! Creating and Configuring a Booklet 

@chagettingstarted
In this part we will describe the complete setup starting just after the creation 
of a git repository to version the booklet files. The example used for this is this booklet itself.
The current installation refers to Pillar 5 or 6 and it will be updated to describe the simplified version put in place with Pillar 70. 

We take as hypothesis that you want to version your document on gihub but Pillar does not care about this. 
Now in the next chapter we will explain how to use github service integration. Such services only work with github.

!!! Installing Pillar

Installing pillar is simple. Now since Pillar can be used to generate different families of document, once you download you should install the template you want to use. But let us get started!

!!!! Cloning a git repository

Let us clone the repository which is empty right now.
[[[
git clone git@github.com:SquareBracketAssociates/Booklet-PublishingAPillarBooklet.git
]]]

[[[
cd Booklet-PublishingAPillarBooklet
]]]

!!!! Installing Pillar

Now you are ready to install Pillar using the following script:

[[[
wget https://raw.githubusercontent.com/pillar-markup/pillar/master/download.sh
chmod +x download.sh
./download.sh
]]]


!!!! Selecting and Installing Book
Pillar come with several templates and you can define your own using mustache (see the book Entreprise Pharo: a Web perspective).
By default Pillar offers the following templates:

- Book. This is the template used in recent Pharo books and booklets. 
- Presentation. These are the beamer templates used for example in the Pharo mooc. 
- Basic-latex. This template is good to generate basic reports. What is nice is that you do not need the latest version of latex packages. 
- Welcome. This template is to teach how to build templates. 


[[[
./pillar archetype book
]]]

[[[
make book 	
]]]

or 
[[[
make book spiral 
]]]

produces a book in the folder ==build==. Indeed the folder Chapters and figures contain some samples.

!!! Adapting Pillar to your Book

Now we are ready to produce your own book. For this we edit some configuration files, in addition to edit some chapters. We focus on the configuration of files.

You need to edit two files:
- pillar.conf which defines all the concerns such as author name, book tile but also the book template.
- book.pillar which lists the chapters in order and is the place to add some glue text.

!!!! Editing pillar.conf 

You can start to edit the file ==pillar.conf==.
The main points are:
- title: 
- attribution: Give the author of the booklet.
- chapters. Here you should give the list of the files. You can put them in separate folders or not. 

Here is the 
[[[
	{
    "title": "Publishing a Pillar Booklet",
    "attribution": "StÃ©phaneDucasse",
    "series": "Square Bracket tutorials",
    "keywords": "project template, Pillar, Pharo, Smalltalk"
    "outputDirectory": "build",
    "mainDocument": "book",
    "latexTemplate": "support/templates/main.latex.mustache",
    "latexChapterTemplate": "support/templates/chapter.latex.mustache",
	  "htmlTemplate": "support/templates/html.mustache",
	  "htmlChapterTemplate": "support/templates/html.mustache",
	  "chapters": [ 
  			"Chapters/GettingStarted",
  			"Chapters/TravisBintray"
	  "newLine": #unix,
	  "configurations": {
	    "LaTeX" : {
	      "outputType": #'latex:sbabook',
	      "separateOutputFiles": true
	    },
	    "HTML" : {
	      "outputType": #html,
	      "separateOutputFiles": true
	    }
	  }
	}

]]]

!!!! Editing book.pillar

Now we will edit the file ==book.pillar== (the file listed in == "mainDocument": "book"== in the ==pillar.conf== file).

[[[
more book.pillar

The current document is a little tutorial to show you how to begin with the creation of booklet.
It describes the installation, customisation and integration with travis and bintray online services.
${inputFile:Chapters/GettingStarted.pillar}$

${inputFile:Chapters/TravisBintray.pillar}$
]]]

!!!! Adding a .gitignore

Not all the downloaded files are worth versionning. We suggest the following .gitignore configuration. 

[[[
more .gitignore
>>>
/Pharo.*
/pharo
/pharo-ui
/pillar
/mustache
/pharo-vm/
/build/
]]]

You can remove the folder figures and the chapter samples. 
Now you are ready to commit your files. 

